plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
	id 'org.jetbrains.kotlin.jvm' version '1.9.22'
	id "org.jetbrains.kotlin.plugin.allopen" version "1.9.22"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	//mavenCentral()
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
}

configurations {
	includeInFinal
}


dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation include("io.github.cottonmc:LibGui:11.0.0+1.21")

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	modImplementation("net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}")
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
	implementation "com.google.code.gson:gson:2.10.1"
	implementation "joda-time:joda-time:2.12.5"
	includeInFinal "joda-time:joda-time:2.12.5"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
	from("licenses") {
		rename { "${it}"}
	}
	// Pack necessary dependencies
	from {
		configurations.includeInFinal.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

compileKotlin.kotlinOptions.jvmTarget = "17"

allOpen {
	annotation("org.spongepowered.asm.mixin.Mixin")
	annotation("org.spongepowered.asm.mixin.injection.Inject")
}